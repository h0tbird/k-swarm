---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: k-swarm
    app.kubernetes.io/part-of: k-swarm
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: k-swarm
    app.kubernetes.io/part-of: k-swarm
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        k-swarm/informer: enabled
        k-swarm/worker: enabled
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - command:
        - /manager
        args:
        - --leader-elect=false
        - --enable-informer=true
        - --enable-worker=true
        - --worker-bind-address=:8082
        - --informer-bind-address=:8083
        - --informer-url=http://k-swarm-informer.k-swarm-system
        - --informer-poll-interval=10s
        - --worker-request-interval=2s
        image: controller:latest
        name: manager
        env:
        - name: CLUSTER_NAME
          value: "kind-dev"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        ports:
        - containerPort: 8082
          name: worker
          protocol: TCP
        - containerPort: 8083
          name: informer
          protocol: TCP
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: informer
spec:
  selector:
    k-swarm/informer: enabled
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: informer
---
apiVersion: v1
kind: Service
metadata:
  name: worker
  labels:
    app: k-swarm
spec:
  selector:
    k-swarm/worker: enabled
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: worker
